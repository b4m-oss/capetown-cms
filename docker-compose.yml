services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_app
    volumes:
      - ./dev:/var/www/html
      - ./dev/nginx.conf:/etc/nginx/conf.d/default.conf  # 追加
    ports:
      - "8000:80" # Laravel の Web サーバーが 8000 ポートで動作
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
    env_file:
      - ./.env
    depends_on:
      - mysql # デフォルトでは MySQL を使用
      # - postgres_db # PostgreSQL を使う場合はこちらを有効化
    networks:
      - capetown_network

# Nginx
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    ports:
      - "80:80"
    volumes:
      - ./dev/nginx.conf:/etc/nginx/nginx.conf
      - ./dev:/var/www/html
    depends_on:
      - app
    networks:
      - capetown_network

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: ${APP_NAME}_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    networks:
      - capetown_network

  # PostgreSQL (コメントアウト)
  # postgres_db:
  #   image: postgres:13
  #   container_name: ${APP_NAME}_postgres_db
  #   environment:
  #     POSTGRES_DB: ${DB_DATABASE}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "${PG_PORT}:5432"
  #   networks:
  #     - capetown_network

  # Adminer (DB UI)
  adminer:
    image: adminer
    container_name: ${APP_NAME}_adminer
    ports:
      - "${ADMINER_PORT}:8080"
    networks:
      - capetown_network

  # Mailpit for mail debugging
  mailpit:
    image: axllent/mailpit
    container_name: ${APP_NAME}_mailpit
    ports:
      - "${MAILPIT_PORT}:8025"
    networks:
      - capetown_network

volumes:
  db_data:
  # postgres_data:

networks:
  capetown_network:
    driver: bridge
